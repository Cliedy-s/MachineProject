<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="MachineState_Stop" xml:space="preserve">
    <value>중지</value>
  </data>
  <data name="Error_MachineNotValid_msg" xml:space="preserve">
    <value>유효한 기계코드인지 확인해주세요</value>
  </data>
  <data name="Regex_phoneEx" xml:space="preserve">
    <value>^[0-9]{2,3}-[0-9]{3,4}-[0-9]{4}$</value>
  </data>
  <data name="Regex_idEx" xml:space="preserve">
    <value>^[a-zA-Z0-9_-]{5,20}$</value>
  </data>
  <data name="Regex_pwdEx" xml:space="preserve">
    <value>^(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&amp;*-]).{8,}$</value>
  </data>
  <data name="Regex_phoneEx_msg" xml:space="preserve">
    <value>휴대폰 번호를 확인해주세요</value>
  </data>
  <data name="MachineState_Crash" xml:space="preserve">
    <value>고장</value>
  </data>
  <data name="ComboBox_DomainUserBy" xml:space="preserve">
    <value>직접입력</value>
  </data>
  <data name="Regex_empidEx" xml:space="preserve">
    <value>^1[0-9]{4}$</value>
  </data>
  <data name="Error_EmpEmailNotExist_msg" xml:space="preserve">
    <value>존재하지 않는 이메일 입니다.</value>
  </data>
  <data name="Regex_nameEx_msg" xml:space="preserve">
    <value>이름을 확인해주세요</value>
  </data>
  <data name="Regex_empidEx_msp" xml:space="preserve">
    <value>직원 아이디는 1로 시작하는 5자리여야 합니다.</value>
  </data>
  <data name="Error_EmpIDNotExist_msg" xml:space="preserve">
    <value>존재하지 않는 사용자입니다.</value>
  </data>
  <data name="Error_MachineNotSetedWork_msg" xml:space="preserve">
    <value>설정된 일이 없습니다.</value>
  </data>
  <data name="Regex_pwdEx_msg" xml:space="preserve">
    <value>비밀번호는 숫자1이상, 영문자1이상, 특수문자 1이상, 글자수 8자리 이상입니다.</value>
  </data>
  <data name="Error_ProductionPlanCantReturnable_msg" xml:space="preserve">
    <value>계획된 개수를 다시 확인해주세요.</value>
  </data>
  <data name="Error_ProductionPlanNotAddable_msg" xml:space="preserve">
    <value>남은 개수를 확인해주세요</value>
  </data>
  <data name="Error_MachineAlreadyRun_msg" xml:space="preserve">
    <value>이미 생산중인 기계입니다.</value>
  </data>
  <data name="Error_NoProductable_msg" xml:space="preserve">
    <value>해당 기계로 생산 불가능한 제품입니다.</value>
  </data>
  <data name="Error_EmpEmailAlreadyExist_msg" xml:space="preserve">
    <value>이미 가입된 이메일입니다.</value>
  </data>
  <data name="Error_MachineRunning_msg" xml:space="preserve">
    <value>실행중인 기계는 안보이게 할 수 없습니다.</value>
  </data>
  <data name="MachineState_Run" xml:space="preserve">
    <value>실행</value>
  </data>
  <data name="Regex_idEx_msg" xml:space="preserve">
    <value>ID는 5~20자의 영문 소문자, 숫자와 특수기호(_),(-)만 사용 가능합니다.</value>
  </data>
  <data name="Error_EmpWrongPwd_msg" xml:space="preserve">
    <value>비밀번호가 틀렸습니다.</value>
  </data>
  <data name="Error_EmpIDAlreadyExist_msg" xml:space="preserve">
    <value>이미 존재하는 직원코드입니다.</value>
  </data>
  <data name="Regex_nameEx" xml:space="preserve">
    <value>^[가-힣]{2,4}|[a-zA-Z]{2,10}\s[a-zA-Z]{2,10}$</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="Led_Yellow_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Led_Yellow_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Error_MachineCantRun_msg" xml:space="preserve">
    <value>관리자는 기계를 실행할 수 없습니다.</value>
  </data>
  <data name="Error_MachineAlreadyDone_mag" xml:space="preserve">
    <value>작업이 끝났습니다.</value>
  </data>
</root>